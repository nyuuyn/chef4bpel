<!-- chef4bpelTestProcess BPEL Process [Generated by the Eclipse BPEL Designer] -->
<!-- Date: Wed Dec 03 13:26:40 CET 2014 -->
<bpel:process name="chef4bpelTestProcess"
	targetNamespace="http://www.opentosca.org/bpel/chef4bpel"
	suppressJoinFailure="yes" xmlns:tns="http://www.opentosca.org/bpel/chef4bpel"
	xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
	xmlns:xs="http://www.w3.org/2001/XMLSchema">

	<bpel:extensions>
		<bpel:extension namespace="http://www.opentosca.org/bpel/chef4bpel"
			mustUnderstand="yes" />
	</bpel:extensions>

	<!-- Import the client WSDL -->
	<bpel:import location="chef4bpelTestProcessArtifacts.wsdl"
		namespace="http://www.opentosca.org/bpel/chef4bpel" importType="http://schemas.xmlsoap.org/wsdl/" />

	<!-- ================================================================= -->
	<!-- PARTNERLINKS -->
	<!-- List of services participating in this BPEL process -->
	<!-- ================================================================= -->
	<bpel:partnerLinks>
		<!-- The 'client' role represents the requester of this service. -->
		<bpel:partnerLink name="client" partnerLinkType="tns:chef4bpelTestProcess"
			myRole="chef4bpelTestProcessProvider" />
	</bpel:partnerLinks>

	<!-- ================================================================= -->
	<!-- VARIABLES -->
	<!-- List of messages and XML documents used within this BPEL process -->
	<!-- ================================================================= -->
	<bpel:variables>
		<!-- Reference to the message passed as input during initiation -->
		<bpel:variable name="input"
			messageType="tns:chef4bpelTestProcessRequestMessage" />



		<!-- Reference to the message that will be returned to the requester -->
		<bpel:variable name="output"
			messageType="tns:chef4bpelTestProcessResponseMessage" />


		<bpel:variable name="testVar" type="xs:string"></bpel:variable>
		<bpel:variable name="SSHPrivateKey" type="xs:string"></bpel:variable>
		<bpel:variable name="SSHUser" type="xs:string"></bpel:variable>
		<bpel:variable name="TestServer" type="xs:string"></bpel:variable>
		<bpel:variable name="instanceDataAPIUrl" type="xs:string"/>
		<bpel:variable name="OpenTOSCAContainerAPIServiceInstanceID" type="xs:string"/>
	</bpel:variables>

	<!-- ================================================================= -->
	<!-- ORCHESTRATION LOGIC -->
	<!-- Set of activities coordinating the flow of messages across the -->
	<!-- services integrated within this business process -->
	<!-- ================================================================= -->
	<bpel:sequence name="main">

		<!-- Receive input from requester. Note: This maps to operation defined 
			in chef4bpelTestProcess.wsdl -->
		<bpel:receive name="receiveInput" partnerLink="client"
			portType="tns:chef4bpelTestProcess" operation="process" variable="input"
			createInstance="yes" />
		<bpel:sequence name="Sequence">

			<bpel:assign validate="no" name="AssignVariables">
				<bpel:copy>
					<bpel:from>
						<bpel:literal>SUCCESS</bpel:literal>
					</bpel:from>
					<bpel:to variable="testVar" />
				</bpel:copy>
                <bpel:copy>
                    <bpel:from part="payload" variable="input">
                        <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:SSHKey]]></bpel:query>
                    </bpel:from>
                    <bpel:to variable="SSHPrivateKey"></bpel:to>
                </bpel:copy>
                <bpel:copy>
                    <bpel:from part="payload" variable="input">
                        <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:instanceDataAPIUrl]]></bpel:query>
                    </bpel:from>
                    <bpel:to variable="instanceDataAPIUrl"></bpel:to>
                </bpel:copy>
                <bpel:copy>
                    <bpel:from part="payload" variable="input">
                        <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:OpenTOSCAContainerAPIServiceInstanceID]]></bpel:query>
                    </bpel:from>
                    <bpel:to variable="OpenTOSCAContainerAPIServiceInstanceID"></bpel:to>
                </bpel:copy>
                <bpel:copy>
                    <bpel:from part="payload" variable="input">
                        <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:TestServer]]></bpel:query>
                    </bpel:from>
                    <bpel:to variable="TestServer"></bpel:to>
                </bpel:copy>
            </bpel:assign>

			<bpel:extensionActivity>
				<chef4bpel:Chef4BPELScript address="$bpelvar[TestServer]"
					dependencies="{ 'mysql': '>= 0.0.0' }" SSHPrivateKey="$bpelvar[SSHPrivateKey]" SSHUser="$bpelvar[SSHUser]"
					xmlns:chef4bpel="http://www.opentosca.org/bpel/chef4bpel" access="ssh" SSHPort="22">
					<![CDATA[=begin If you can read SUCCESS  here -> $bpelvar[testVar] , the test was successful. =end
							 include_recipe \"mysql::server\"\n
							 package 'apache_httpd' do \n
							 	http_port $TOSCAProperty[ApacheWebServer.httpdport]\n
							 	ensure 'installed' \n
							 end
					]]>					
				</chef4bpel:Chef4BPELScript>
			</bpel:extensionActivity>

			<bpel:assign validate="no" name="AssignOutput">
				<bpel:copy>
					<bpel:from>
						<bpel:literal>
							<tns:chef4bpelTestProcessResponse
								xmlns:tns="http://www.opentosca.org/bpel/chef4bpel" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
								<tns:result>tns:result</tns:result>
							</tns:chef4bpelTestProcessResponse>
						</bpel:literal>
					</bpel:from>
					<bpel:to variable="output" part="payload"></bpel:to>
				</bpel:copy>
				<bpel:copy>
					<bpel:from part="payload" variable="input">
						<bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                            <![CDATA[tns:TestServer]]>
						</bpel:query>
					</bpel:from>
					<bpel:to part="payload" variable="output">
						<bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:result]]></bpel:query>
					</bpel:to>
				</bpel:copy>
			</bpel:assign>
		</bpel:sequence>

		<!-- Generate reply to synchronous request -->
		<bpel:reply name="replyOutput" partnerLink="client"
			portType="tns:chef4bpelTestProcess" operation="process" variable="output" />
	</bpel:sequence>
</bpel:process>

